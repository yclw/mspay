// =================================================================================
// This file is auto-generated by the GoFrame CLI tool. You may modify it as needed.
// =================================================================================

package dao

import (
	"context"

	"github.com/gogf/gf/v2/frame/g"
	"github.com/yclw/mspay/internal/dao/internal"
	"github.com/yclw/mspay/internal/model/entity"
	"github.com/yclw/mspay/util/tree"
)

// tRoleInfoDao is the data access object for the table t_role_info.
// You can define custom methods on it to extend its functionality as needed.
type tRoleInfoDao struct {
	*internal.TRoleInfoDao
}

var (
	// TRoleInfo is a globally accessible object for table t_role_info operations.
	TRoleInfo = tRoleInfoDao{internal.NewTRoleInfoDao()}
)

// Add your custom methods and functionality below.

// GetRoleById 获取角色信息
func (d *tRoleInfoDao) GetRoleById(ctx context.Context, roleId int64) (role *entity.TRoleInfo, err error) {
	cols := d.Columns()
	err = d.Ctx(ctx).Fields(cols.Id, cols.Key, cols.Status).WherePri(roleId).Scan(&role)
	return
}

// GetSubRoleIds 获取所有下级角色ID
func (d *tRoleInfoDao) GetSubRoleIds(ctx context.Context, roleId int64) (ids []int64, err error) {
	cols := d.Columns()
	mod := d.Ctx(ctx).Fields(cols.Id).WhereNot(cols.Id, roleId).WhereLike(cols.Tree, "%"+tree.GetIdLabel(roleId)+"%")

	columns, err := mod.Array()
	if err != nil {
		return nil, err
	}

	ids = g.NewVar(columns).Int64s()
	return
}
